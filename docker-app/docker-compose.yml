services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ""  # Leerer String, da Nginx das Routing Ã¼bernimmt
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz.html"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_NAME: notesdb
      DB_PASSWORD: mysecretpassword
      PORT: 3000
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "3000:3000"
    networks:
      - app-network

  database:
    image: postgres:17-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: notesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d notesdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge

